user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    log_format  cache '$request $upstream_cache_status';
    access_log  /var/log/nginx/access.log cache;

    sendfile        on;

    keepalive_timeout  65;



    stream app1backends {
        # ip_hash;
        server echo1:8080 weight=5;
        server echo2:8080;
        server echo3:8080 backup;
        
    }
    stream app2backends {
        # ip_hash;
        server echo1:8080 weight=5;
        server echo2:8080;
        server echo3:8080 backup;
        
    }
    server {
        listen 80;
        location / {
            proxy_pass http://app1backends;
            proxy_set_header X-Real-IP $remete_addr;
            poxy_cache mycache;
            proxy_cache_min_uses 2;
        }

        location /app1 {
            proxy_pass http://app1backends;
        }

        location /app2 {
            proxy_pass http://app2backends;
        }
        location /long {
            proxy_pass http://app1backends;
            # disable buffer wait till get entire response, but streaming support
            prxy_buffering off;
            proxy_set_header X-Accel-Buffering no;
        }


        
    }


    proxy_cache_path /nginx_cache keys_zone=mycache:10m;
    server {
        listen 8081;
        server_name mailhog.com;
        
        location / {
            proxy_pass http://email;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade"; 
            proxy_set_header Host $host;

            proxy_cache mycache;
            proxy_cache_min_uses  2;

        }
    }
}